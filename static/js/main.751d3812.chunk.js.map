{"version":3,"sources":["earth-blue-marble.jpg","earth-topology.png","night-sky.png","earth-water.png","ne_110m_admin_0_countries.geojson","App.js","index.js"],"names":["withSize","size","useState","features","countries","setCountries","hover","setHover","onHoverHandler","useCallback","polygon","properties","ISO_A3","globeMaterial","THREE","bumpScale","load","materialImage","texture","specularMap","specular","shininess","useEffect","fetch","data","then","res","json","width","height","globeImageUrl","globeImage","bumpImageUrl","bumpImage","backgroundImageUrl","backgroundImage","polygonsData","polygonCapColor","d","polygonSideColor","onPolygonHover","polygonLabel","ADMIN","ISO_A2","POP_EST","toLocaleString","navigator","language","POP_YEAR","POP_RANK","GDP_NOMINAL_EST","GDP_NOMINAL_YEAR","GDP_PPP_EST","GDP_PPP_YEAR","ReactDOM","render","document","getElementById"],"mappings":"gLAAe,MAA0B,8CCA1B,MAA0B,2CCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,0D,QC4D1BA,4BAlDf,YAA0B,IAATC,EAAQ,EAARA,KACf,EAAkCC,mBAAS,CAAEC,SAAU,KAAvD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,qBAA1B,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAiBC,uBAAY,SAACC,GAEhCH,EADc,OAAZG,EACOA,EAAQC,WAAWC,OAEnB,QAEV,IAEGC,EAAgB,IAAIC,IAY1B,OAXAD,EAAcE,UAAY,IAC1B,IAAID,MAAsBE,KAAKC,GAAe,SAAAC,GAC5CL,EAAcM,YAAcD,EAC5BL,EAAcO,SAAW,IAAIN,IAAY,QACzCD,EAAcQ,UAAY,MAG5BC,qBAAU,WACRC,MAAMC,GAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAAKpB,KACxC,IAGD,cAAC,IAAD,CACEuB,MAAO3B,EAAK2B,MACZC,OAAQ,IACRC,cAAeC,EACfC,aAAcC,EACdC,mBAAoBC,EACpBC,aAAchC,EAAUD,SACxBkC,gBAAiB,SAACC,GAAD,OACfA,EAAE3B,WAAWC,SAAWN,EACpB,0BACA,yBAENiC,iBAAkB,2CAClBC,eAAgBhC,EAChBiC,aAAc,gBAAeH,EAAf,EAAG3B,WAAH,+BACL2B,EAAEI,MADG,aACOJ,EAAEK,OADT,wDAEAL,EAAEM,QAAQC,eAAeC,UAAUC,UAFnC,mBAEkDT,EAAEU,SAFpD,+DAGEV,EAAEW,SAHJ,gEAIeX,EAAEY,gBAAgBL,eAAeC,UAAUC,UAJ1D,aAIwET,EAAEa,iBAJ1E,6DAKWb,EAAEc,YAAYP,eAAeC,UAAUC,UALlD,aAKgET,EAAEe,aALlE,8BC9CpBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,e","file":"static/js/main.751d3812.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth-blue-marble.7deee995.jpg\";","export default __webpack_public_path__ + \"static/media/earth-topology.739e278b.png\";","export default __webpack_public_path__ + \"static/media/night-sky.51b096ab.png\";","export default __webpack_public_path__ + \"static/media/earth-water.4d1be7fc.png\";","export default __webpack_public_path__ + \"static/media/ne_110m_admin_0_countries.1d3665d4.geojson\";","import { useState, useEffect, useCallback } from 'react';\r\nimport { withSize } from 'react-sizeme'\r\nimport Globe from 'react-globe.gl';\r\nimport * as THREE from 'three';\r\nimport globeImage from './earth-blue-marble.jpg';\r\nimport bumpImage from './earth-topology.png';\r\nimport backgroundImage from './night-sky.png';\r\nimport materialImage from './earth-water.png';\r\nimport data from './ne_110m_admin_0_countries.geojson';\r\n\r\nfunction World({ size }) {\r\n  const [countries, setCountries] = useState({ features: [] })\r\n  const [hover, setHover] = useState();\r\n\r\n  const onHoverHandler = useCallback((polygon) => {\r\n    if (polygon !== null) {\r\n      setHover(polygon.properties.ISO_A3);\r\n    } else {\r\n      setHover(null);\r\n    }\r\n  }, []);\r\n\r\n  const globeMaterial = new THREE.MeshPhongMaterial()\r\n  globeMaterial.bumpScale = 10\r\n  new THREE.TextureLoader().load(materialImage, texture => {\r\n    globeMaterial.specularMap = texture\r\n    globeMaterial.specular = new THREE.Color('grey')\r\n    globeMaterial.shininess = 15\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetch(data).then(res => res.json()).then(setCountries);\r\n  }, [])\r\n\r\n  return (\r\n    <Globe\r\n      width={size.width}\r\n      height={500}\r\n      globeImageUrl={globeImage}\r\n      bumpImageUrl={bumpImage}\r\n      backgroundImageUrl={backgroundImage}\r\n      polygonsData={countries.features}\r\n      polygonCapColor={(d) =>\r\n        d.properties.ISO_A3 === hover\r\n          ? \"rgba(255, 255,255, 0.3)\"\r\n          : \"rgba(255, 255,255, 0)\"\r\n      }\r\n      polygonSideColor={() => `rgba(255, 255, 255, 0)`}\r\n      onPolygonHover={onHoverHandler}\r\n      polygonLabel={({ properties: d }) => `\r\n          <b>${d.ADMIN} (${d.ISO_A2})</b> <br>\r\n          인구수: <i>${d.POP_EST.toLocaleString(navigator.language)}명 (${d.POP_YEAR})</i> <br>\r\n          인구 순위: <i>${d.POP_RANK}</i> <br>\r\n          1인당 GDP(nominal): <i>\\$${d.GDP_NOMINAL_EST.toLocaleString(navigator.language)} (${d.GDP_NOMINAL_YEAR})</i> <br>\r\n          1인당 GDP(PPP): <i>\\$${d.GDP_PPP_EST.toLocaleString(navigator.language)} (${d.GDP_PPP_YEAR})</i> <br>\r\n        `}\r\n    />\r\n  )\r\n};\r\n\r\nexport default withSize()(World);\r\n","import ReactDOM from 'react-dom';\r\nimport World from './App';\r\n\r\nReactDOM.render(\r\n    <World />,\r\n  document.getElementById('globeViz')\r\n);"],"sourceRoot":""}