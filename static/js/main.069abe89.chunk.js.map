{"version":3,"sources":["assets/textures/earth_daymap.jpg","assets/textures/earth_normal_map.jpg","assets/textures/earth_specular_map.jpg","assets/textures/earth_clouds.jpg","components/earth/index.js","components/topSection/index.js","index.js"],"names":["Earth","useLoader","THREE","EarthDayMap","EarthNormalMap","EarthSpecularMap","EarthCloudsMap","colorMap","normalMap","specularMap","cloudsMap","earthRef","useRef","cloudsRef","useFrame","elapsedTime","clock","getElapsedTime","current","rotation","y","x","color","position","intensity","Stars","radius","depth","count","factor","saturation","fade","ref","args","map","opacity","depthWrite","transparent","side","metalness","roughness","TopSectionContainer","styled","div","Logo","h1","Slogan","h4","Paragraph","p","Enter","button","TopSection","href","CanvasContainer","ReactDOM","render","Suspense","fallback","document","getElementById"],"mappings":"wMAAe,MAA0B,yCCA1B,MAA0B,6CCA1B,MAA0B,+CCA1B,MAA0B,yC,OCUlC,SAASA,IACZ,MAAsDC,YAClDC,gBACA,CAACC,EAAaC,EAAgBC,EAAkBC,IAFpD,mBAAOC,EAAP,KAAiBC,EAAjB,KAA4BC,EAA5B,KAAyCC,EAAzC,KAKMC,EAAWC,mBACXC,EAAYD,mBASlB,OAPAE,aAAS,YAAgB,IACfC,EADc,EAAZC,MACkBC,iBAC1BN,EAASO,QAAQC,SAASC,EAAIL,EAAc,GAC5CF,EAAUK,QAAQC,SAASE,EAAIN,EAAc,GAC7CF,EAAUK,QAAQC,SAASC,EAAIL,EAAc,MAI7C,qCAEI,4BAAYO,MAAM,UAAUC,SAAU,CAAC,EAAG,EAAG,GAAIC,UAAW,KAC5D,cAACC,EAAA,EAAD,CACIC,OAAQ,IACRC,MAAO,GACPC,MAAO,IACPC,OAAQ,GACRC,WAAY,GACZC,MAAM,IAEV,uBAAMC,IAAKnB,EAAWU,SAAU,CAAC,EAAG,EAAG,OAAvC,UACI,gCAAgBU,KAAM,CAAC,MAAO,GAAI,MAClC,mCACIC,IAAKxB,EACLyB,QAAS,GACTC,YAAY,EACZC,aAAa,EACbC,KAAMpC,kBAGd,uBAAM8B,IAAKrB,EAAUY,SAAU,CAAC,EAAG,EAAG,KAAtC,UACI,gCAAgBU,KAAM,CAAC,EAAG,GAAI,MAC9B,mCAAmBxB,YAAaA,IAChC,sCACIyB,IAAK3B,EACLC,UAAWA,EACX+B,UAAW,GACXC,UAAW,W,sBCpDzBC,EAAsBC,IAAOC,IAAV,+RAgBnBC,EAAOF,IAAOG,GAAV,kJASJC,EAASJ,IAAOK,GAAV,yKAUNC,EAAYN,IAAOO,EAAV,iNAYTC,EAAQR,IAAOS,OAAV,6bAwBJ,SAASC,IACd,OACE,eAACX,EAAD,WACE,cAACG,EAAD,iCACA,cAACE,EAAD,0DACA,cAACE,EAAD,koBAGA,cAACA,EAAD,0nBAGA,mBAAGK,KAAK,QAAR,SAAgB,cAACH,EAAD,yDC9EtB,IAAMI,EAAkBZ,IAAOC,IAAV,wZAcrBY,IAASC,OACP,eAACF,EAAD,WACE,cAACF,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAMK,SAAP,CAAgBC,SAAU,KAA1B,SACE,cAAC1D,EAAD,WAIJ2D,SAASC,eAAe,W","file":"static/js/main.069abe89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth_daymap.7df393be.jpg\";","export default __webpack_public_path__ + \"static/media/earth_normal_map.4f745121.jpg\";","export default __webpack_public_path__ + \"static/media/earth_specular_map.7a891986.jpg\";","export default __webpack_public_path__ + \"static/media/earth_clouds.6e4e32b2.jpg\";","import { useRef } from \"react\";\r\nimport { useFrame, useLoader } from \"@react-three/fiber\";\r\nimport { Stars } from \"@react-three/drei\";\r\nimport * as THREE from \"three\";\r\n\r\nimport EarthDayMap from \"../../assets/textures/earth_daymap.jpg\";\r\nimport EarthNormalMap from \"../../assets/textures/earth_normal_map.jpg\";\r\nimport EarthSpecularMap from \"../../assets/textures/earth_specular_map.jpg\";\r\nimport EarthCloudsMap from \"../../assets/textures/earth_clouds.jpg\";\r\n\r\nexport function Earth() {\r\n    const [colorMap, normalMap, specularMap, cloudsMap] = useLoader(\r\n        THREE.TextureLoader,\r\n        [EarthDayMap, EarthNormalMap, EarthSpecularMap, EarthCloudsMap]\r\n    )\r\n\r\n    const earthRef = useRef()\r\n    const cloudsRef = useRef()\r\n\r\n    useFrame(({ clock }) => {\r\n        const elapsedTime = clock.getElapsedTime()\r\n        earthRef.current.rotation.y = elapsedTime / 50\r\n        cloudsRef.current.rotation.x = elapsedTime / 90\r\n        cloudsRef.current.rotation.y = elapsedTime / 45\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {/* <ambientLight intensity={1} /> */}\r\n            <pointLight color=\"#f6f3ea\" position={[1, 0, 5]} intensity={.8} />\r\n            <Stars\r\n                radius={200}\r\n                depth={60}\r\n                count={10000}\r\n                factor={10}\r\n                saturation={10}\r\n                fade={true}\r\n            />\r\n            <mesh ref={cloudsRef} position={[0, 0, 3.205]}>\r\n                <sphereGeometry args={[1.005, 64, 64]} />\r\n                <meshPhongMaterial\r\n                    map={cloudsMap}\r\n                    opacity={0.5}\r\n                    depthWrite={true}\r\n                    transparent={true}\r\n                    side={THREE.DoubleSide}\r\n                />\r\n            </mesh>\r\n            <mesh ref={earthRef} position={[0, 0, 3.2]}>\r\n                <sphereGeometry args={[1, 64, 64]} />\r\n                <meshPhongMaterial specularMap={specularMap} />\r\n                <meshStandardMaterial\r\n                    map={colorMap}\r\n                    normalMap={normalMap}\r\n                    metalness={0.4}\r\n                    roughness={0.7}\r\n                />\r\n            </mesh>\r\n        </>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst TopSectionContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #1756dd32;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: 99;\r\n`\r\n\r\nconst Logo = styled.h1`\r\n  margin: 0;\r\n  margin-bottom: 1em;\r\n  color: #fffd;\r\n  font-weight: 700;\r\n  font-size: 40px;\r\n  text-align: center;\r\n`\r\n\r\nconst Slogan = styled.h4`\r\n  margin: 0;\r\n  margin-bottom: 1.2em;\r\n  color: #fffa;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  max-width: 500px;\r\n  text-align: center;\r\n`\r\n\r\nconst Paragraph = styled.p`\r\n  display: block;\r\n  margin: 0;\r\n  margin-bottom: 2.4em;\r\n  color: #fffd;\r\n  font-size: 15px;\r\n  line-height: 1.5;\r\n  font-weight: 300;\r\n  max-width: 700px;\r\n  text-align: center;\r\n`\r\n\r\nconst Enter = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  color: #ffff;\r\n  background-color: #5c6ac48d;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  border-radius: 8px;\r\n  padding: 10px 2em;\r\n  cursor: pointer;\r\n  border: 3px solid transparent;\r\n  transition: all 350ms ease-in-out;\r\n\r\n  a {\r\n    color: #fffb;\r\n    text-decoration: none;\r\n    transition: all 350ms ease-in-out;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #5c6ac4ff;\r\n  }\r\n`\r\n\r\nexport function TopSection() {\r\n  return (\r\n    <TopSectionContainer>\r\n      <Logo>Thought Repository</Logo>\r\n      <Slogan>탄소중립(Carbon Neutrality)</Slogan>\r\n      <Paragraph>\r\n        탄소중립은 인간활동에 따른 온실가스 배출량이 전 지구적 이산화탄소 흡수량과 균형을 이뤄 대기 중 이산화탄소 농도가 더 높아지지 않는 것을 의미한다. 즉 이산화탄소 순 배출량이 '0'이 되도록 하는 것으로 '넷 제로(Net Zero), 탄소 제로(Carbon Zero)'라고도 한다.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        탄소중립을 달성하려면 차량과 공장의 화석 연료 연소 등과 같은 인위적 배출을 최대한 줄이고, 나머지 이산화탄소는 습지, 숲 복원 등 흡수원을 확대해 흡수량을 늘리거나 네거티브 배출 기술(Negative Emission Technique, NET)로 대기 중 이산화탄소를 제거해야 한다.\r\n      </Paragraph>\r\n      <a href='world'><Enter>탄소배출 현황</Enter></a>\r\n    </TopSectionContainer>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { Canvas } from '@react-three/fiber'\nimport { Earth } from './components/earth';\nimport { TopSection } from './components/topSection';\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 800px;\n  margin: 0;\n  padding: 0;\n  background-color: #01040c;\n  cursor: default;\n\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Nenu', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`\n\nReactDOM.render(\n  <CanvasContainer>\n    <TopSection />\n    <Canvas>\n      <React.Suspense fallback={null}>\n        <Earth />\n      </React.Suspense>\n    </Canvas>\n  </CanvasContainer>\n  , document.getElementById('root')\n);"],"sourceRoot":""}