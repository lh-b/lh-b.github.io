{"version":3,"sources":["earth-blue-marble.jpg","earth-topology.png","night-sky.png","minimal_countries.geojson","App.js","index.js"],"names":["withSize","size","useState","features","countries","setCountries","hover","setHover","onHoverHandler","useCallback","polygon","properties","ISO_A3","useEffect","fetch","data","then","res","json","width","height","globeImageUrl","globeImage","bumpImageUrl","bumpImage","backgroundImageUrl","backgroundImage","polygonsData","polygonCapColor","d","polygonSideColor","onPolygonHover","polygonLabel","NAME_KR","ISO_A2","POP_EST","toLocaleString","POP_YEAR","POP_RANK","GDP_NOMINAL_EST","GDP_NOMINAL_YEAR","GDP_PPP_EST","GDP_PPP_YEAR","ReactDOM","render","document","getElementById"],"mappings":"uKAAe,MAA0B,8CCA1B,MAA0B,2CCA1B,MAA0B,sCCA1B,MAA0B,kD,QCkD1BA,4BA1Cf,YAA0B,IAATC,EAAQ,EAARA,KACf,EAAkCC,mBAAS,CAAEC,SAAU,KAAvD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,qBAA1B,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAiBC,uBAAY,SAACC,GAEhCH,EADc,OAAZG,EACOA,EAAQC,WAAWC,OAEnB,QAEV,IAMH,OAJAC,qBAAU,WACRC,MAAMC,GAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAAKX,KACxC,IAGD,cAAC,IAAD,CACEc,MAAOlB,EAAKkB,MACZC,OAAQ,IACRC,cAAeC,EACfC,aAAcC,EACdC,mBAAoBC,EACpBC,aAAcvB,EAAUD,SACxByB,gBAAiB,SAACC,GAAD,OACfA,EAAElB,WAAWC,SAAWN,EACpB,0BACA,yBAENwB,iBAAkB,2CAClBC,eAAgBvB,EAChBwB,aAAc,gBAAeH,EAAf,EAAGlB,WAAH,+BACLkB,EAAEI,QADG,aACSJ,EAAEK,OADX,wDAEAL,EAAEM,QAAQC,eAAe,SAFzB,mBAEuCP,EAAEQ,SAFzC,+DAGER,EAAES,SAHJ,gEAIeT,EAAEU,gBAAgBH,eAAe,SAJhD,aAI6DP,EAAEW,iBAJ/D,6DAKWX,EAAEY,YAAYL,eAAe,SALxC,aAKqDP,EAAEa,aALvD,8BCpCpBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,e","file":"static/js/main.a3d53fe3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth-blue-marble.7deee995.jpg\";","export default __webpack_public_path__ + \"static/media/earth-topology.739e278b.png\";","export default __webpack_public_path__ + \"static/media/night-sky.51b096ab.png\";","export default __webpack_public_path__ + \"static/media/minimal_countries.cfc256ed.geojson\";","import { useState, useEffect, useCallback } from 'react';\nimport { withSize } from 'react-sizeme'\nimport Globe from 'react-globe.gl';\nimport globeImage from './earth-blue-marble.jpg';\nimport bumpImage from './earth-topology.png';\nimport backgroundImage from './night-sky.png';\nimport data from './minimal_countries.geojson';\n\nfunction World({ size }) {\n  const [countries, setCountries] = useState({ features: [] })\n  const [hover, setHover] = useState();\n\n  const onHoverHandler = useCallback((polygon) => {\n    if (polygon !== null) {\n      setHover(polygon.properties.ISO_A3);\n    } else {\n      setHover(null);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch(data).then(res => res.json()).then(setCountries);\n  }, [])\n\n  return (\n    <Globe\n      width={size.width}\n      height={500}\n      globeImageUrl={globeImage}\n      bumpImageUrl={bumpImage}\n      backgroundImageUrl={backgroundImage}\n      polygonsData={countries.features}\n      polygonCapColor={(d) =>\n        d.properties.ISO_A3 === hover\n          ? \"rgba(255, 255,255, 0.3)\"\n          : \"rgba(255, 255,255, 0)\"\n      }\n      polygonSideColor={() => `rgba(255, 255, 255, 0)`}\n      onPolygonHover={onHoverHandler}\n      polygonLabel={({ properties: d }) => `\n          <b>${d.NAME_KR} (${d.ISO_A2})</b> <br>\n          인구수: <i>${d.POP_EST.toLocaleString('ko-KR')}명 (${d.POP_YEAR})</i> <br>\n          인구 순위: <i>${d.POP_RANK}</i> <br>\n          1인당 GDP(nominal): <i>\\$${d.GDP_NOMINAL_EST.toLocaleString('ko-KR')} (${d.GDP_NOMINAL_YEAR})</i> <br>\n          1인당 GDP(PPP): <i>\\$${d.GDP_PPP_EST.toLocaleString('ko-KR')} (${d.GDP_PPP_YEAR})</i> <br>\n        `}\n    />\n  )\n};\n\nexport default withSize()(World);\n","import ReactDOM from 'react-dom';\nimport World from './App';\n\nReactDOM.render(\n    <World />,\n  document.getElementById('globeViz')\n);"],"sourceRoot":""}