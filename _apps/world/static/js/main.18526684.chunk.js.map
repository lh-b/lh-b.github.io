{"version":3,"sources":["minimal_countries.geojson","World.js","index.js"],"names":["withSize","size","useState","features","countries","setCountries","useEffect","fetch","data","then","res","json","width","height","showGlobe","showAtmosphere","backgroundColor","hexPolygonsData","hexPolygonResolution","hexPolygonMargin","hexPolygonColor","Math","round","random","pow","toString","padStart","hexPolygonLabel","d","properties","NAME_KR","ISO_A2","POP_EST","toLocaleString","navigator","language","POP_YEAR","POP_RANK","GDP_NOMINAL_EST","GDP_NOMINAL_YEAR","GDP_PPP_EST","GDP_PPP_YEAR","ReactDOM","render","document","getElementById"],"mappings":"4LAAe,MAA0B,kD,gBCmC1BA,wBA7BD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,EAAkCC,mBAAS,CAAEC,SAAU,KAAvD,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OALAC,qBAAU,WAERC,MAAMC,GAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAAKJ,KACxC,IAEI,cAAC,IAAD,CACLO,MAAOX,EAAKW,MACZC,OAAQ,IACRC,WAAW,EACXC,gBAAgB,EAChBC,gBAAgB,yBAEhBC,gBAAiBb,EAAUD,SAC3Be,qBAAsB,EACtBC,iBAAkB,IAClBC,gBAAiB,4BAAUC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKG,IAAI,EAAG,KAAKC,SAAS,IAAIC,SAAS,EAAG,KAA/E,OACjBC,gBAAiB,gBAAeC,EAAf,EAAGC,WAAH,6BACRD,EAAEE,QADM,aACMF,EAAEG,OADR,sDAEHH,EAAEI,QAAQC,eAAeC,UAAUC,UAFhC,mBAE+CP,EAAEQ,SAFjD,6DAGDR,EAAES,SAHD,6DAIUT,EAAEU,gBAAgBL,eAAeC,UAAUC,UAJrD,aAImEP,EAAEW,iBAJrE,0DAKMX,EAAEY,YAAYP,eAAeC,UAAUC,UAL7C,aAK2DP,EAAEa,aAL7D,4BCtBrBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.18526684.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/minimal_countries.cfc256ed.geojson\";","import { useState, useEffect  } from 'react';\nimport { withSize } from 'react-sizeme';\nimport Globe from 'react-globe.gl';\nimport data from './minimal_countries.geojson';\nimport './World.css'\n\nconst World = ({ size }) => {\n  const [countries, setCountries] = useState({ features: [] });\n\n  useEffect(() => {\n    // load data\n    fetch(data).then(res => res.json()).then(setCountries);\n  }, []);\n\n  return <Globe\n    width={size.width}\n    height={800}\n    showGlobe={false}\n    showAtmosphere={false}\n    backgroundColor='rgba(255, 255, 255, 0)'\n\n    hexPolygonsData={countries.features}\n    hexPolygonResolution={3}\n    hexPolygonMargin={0.01}\n    hexPolygonColor={() => `#${Math.round(Math.random() * Math.pow(2, 24)).toString(16).padStart(6, '0')}AF`}\n    hexPolygonLabel={({ properties: d }) => `\n        <b>${d.NAME_KR} (${d.ISO_A2})</b> <br>\n        인구수: <i>${d.POP_EST.toLocaleString(navigator.language)}명 (${d.POP_YEAR})</i> <br>\n        인구 순위: <i>${d.POP_RANK}</i> <br>\n        1인당 GDP(nominal): <i>${d.GDP_NOMINAL_EST.toLocaleString(navigator.language)} (${d.GDP_NOMINAL_YEAR})</i> <br>\n        1인당 GDP(PPP): <i>${d.GDP_PPP_EST.toLocaleString(navigator.language)} (${d.GDP_PPP_YEAR})</i> <br>\n      `}\n  />;\n};\n\nexport default withSize()(World);\n","import ReactDOM from 'react-dom';\nimport World from './World';\n\nReactDOM.render(\n    <World />,\n  document.getElementById('root')\n);"],"sourceRoot":""}