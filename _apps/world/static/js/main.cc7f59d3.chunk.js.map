{"version":3,"sources":["assets/textures/earth-blue-marble.jpg","assets/textures/night-sky.png","assets/textures/earth-topology.png","minimal_countries.geojson","index.js"],"names":["World","useState","features","countries","setCountries","hover","setHover","weightColor","d3","domain","range","clamp","useEffect","fetch","data","then","res","json","monitorHeight","size","width","parseInt","height","globeImageUrl","globeImage","bumpImageUrl","bumpImage","backgroundImageUrl","backgroundImage","lineHoverPrecision","onPolygonHover","polygonsData","filter","d","properties","MtCO2_EST","polygonsTransitionDuration","polygonAltitude","polygonCapColor","polygonSideColor","polygonStrokeColor","polygonLabel","NAME_KR","ISO_A2","toLocaleString","navigator","language","MtCO2_YEAR","POP_EST","POP_YEAR","POP_RANK","GDP_NOMINAL_EST","GDP_NOMINAL_YEAR","GDP_PPP_EST","GDP_PPP_YEAR","ReactDOM","render","document","getElementById"],"mappings":"+LAAe,MAA0B,8CCA1B,MAA0B,sCCA1B,MAA0B,2CCA1B,MAA0B,kD,yBCWzC,SAASA,IACP,MAAkCC,mBAAS,CAAEC,SAAU,KAAvD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,qBAA1B,mBAAOI,EAAP,KAAcC,EAAd,KACMC,EAAcC,MACjBC,OAAO,CAAC,EAAG,MACXC,MAAM,CAAC,2BAA4B,yBACnCC,OAAM,GAOT,OALAC,qBAAU,WAERC,MAAMC,GAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAAKX,KACxC,IAEI,cAAC,SAAD,CAAQc,eAAa,EAArB,SACJ,gBAAGC,EAAH,EAAGA,KAAH,OACC,cAAC,IAAD,CACEC,MAAOC,SAASF,EAAKC,OACrBE,OAAQD,SAASF,EAAKG,QACtBC,cAAeC,EACfC,aAAcC,EACdC,mBAAoBC,EACpBC,mBAAoB,EAEpBC,eAAgBxB,EAChByB,aAAc5B,EAAUD,SAAS8B,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAWC,aAC1DC,2BAA4B,IAC5BC,gBAAiB,SAAAJ,GAAC,OAAIA,IAAM5B,EAAQ,KAAQ,MAC5CiC,gBAAiB,SAAAL,GAAC,OAAI1B,EAAY0B,EAAEC,WAAWC,YAC/CI,iBAAkB,SAAAN,GAAC,OAAI1B,EAAY0B,EAAEC,WAAWC,YAChDK,mBAAoB,iBAAM,4BAC1BC,aAAc,gBAAeR,EAAf,EAAGC,WAAH,+BACPD,EAAES,QADK,aACOT,EAAEU,OADT,oEAEAV,EAAEE,UAAUS,eAAeC,UAAUC,UAFrC,kBAEwDb,EAAEc,WAF1D,wDAGFd,EAAEe,QAAQJ,eAAeC,UAAUC,UAHjC,mBAGgDb,EAAEgB,SAHlD,+DAIAhB,EAAEiB,SAJF,+DAKWjB,EAAEkB,gBAAgBP,eAAeC,UAAUC,UALtD,aAKoEb,EAAEmB,iBALtE,4DAMOnB,EAAEoB,YAAYT,eAAeC,UAAUC,UAN9C,aAM4Db,EAAEqB,aAN9D,8BAatBC,IAASC,OAAO,cAACxD,EAAD,IAAWyD,SAASC,eAAe,W","file":"static/js/main.cc7f59d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth-blue-marble.7deee995.jpg\";","export default __webpack_public_path__ + \"static/media/night-sky.51b096ab.png\";","export default __webpack_public_path__ + \"static/media/earth-topology.739e278b.png\";","export default __webpack_public_path__ + \"static/media/minimal_countries.2e612b23.geojson\";","import { useState, useEffect } from 'react';\r\nimport { SizeMe } from 'react-sizeme';\r\nimport ReactDOM from 'react-dom';\r\nimport Globe from 'react-globe.gl';\r\nimport globeImage from './assets/textures/earth-blue-marble.jpg';\r\nimport backgroundImage from './assets/textures/night-sky.png';\r\nimport bumpImage from './assets/textures/earth-topology.png';\r\nimport data from './minimal_countries.geojson';\r\nimport * as d3 from \"d3\";\r\nimport './index.css'\r\n\r\nfunction World() {\r\n  const [countries, setCountries] = useState({ features: [] })\r\n  const [hover, setHover] = useState()\r\n  const weightColor = d3.scaleLinear()\r\n    .domain([0, 10000])\r\n    .range(['rgba(173, 216, 230, 0.5)', 'rgba(139, 0, 0, 0.8)'])\r\n    .clamp(true)\r\n\r\n  useEffect(() => {\r\n    // load data\r\n    fetch(data).then(res => res.json()).then(setCountries);\r\n  }, [])\r\n\r\n  return <SizeMe monitorHeight>\r\n    {({ size }) => (\r\n      <Globe\r\n        width={parseInt(size.width)}\r\n        height={parseInt(size.height)}\r\n        globeImageUrl={globeImage}\r\n        bumpImageUrl={bumpImage}\r\n        backgroundImageUrl={backgroundImage}\r\n        lineHoverPrecision={0}\r\n\r\n        onPolygonHover={setHover}\r\n        polygonsData={countries.features.filter(d => d.properties.MtCO2_EST)}\r\n        polygonsTransitionDuration={300}\r\n        polygonAltitude={d => d === hover ? 0.015 : 0.005}\r\n        polygonCapColor={d => weightColor(d.properties.MtCO2_EST)}\r\n        polygonSideColor={d => weightColor(d.properties.MtCO2_EST)}\r\n        polygonStrokeColor={() => 'rgba(255, 255, 255, 0.1)'}\r\n        polygonLabel={({ properties: d }) => `\r\n          <b>${d.NAME_KR} (${d.ISO_A2})</b> <br>\r\n          탄소배출량: <i>${d.MtCO2_EST.toLocaleString(navigator.language)}MtCO2 (${d.MtCO2_YEAR})</i> <br>\r\n          인구수: <i>${d.POP_EST.toLocaleString(navigator.language)}명 (${d.POP_YEAR})</i> <br>\r\n          인구 순위: <i>${d.POP_RANK}</i> <br>\r\n          1인당 GDP(nominal): <i>${d.GDP_NOMINAL_EST.toLocaleString(navigator.language)} (${d.GDP_NOMINAL_YEAR})</i> <br>\r\n          1인당 GDP(PPP): <i>${d.GDP_PPP_EST.toLocaleString(navigator.language)} (${d.GDP_PPP_YEAR})</i> <br>\r\n        `}\r\n      />\r\n    )}\r\n  </SizeMe>\r\n};\r\n\r\nReactDOM.render(<World />, document.getElementById('root'));\r\n"],"sourceRoot":""}